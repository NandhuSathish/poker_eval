import React, { useState } from 'react';

// Define the base EV values for different hands based on a 6-player table
const evValues: { [key: string]: { [key: string]: number } } = {
    'AA': { SB: 2.62, BB: 2.26, 3: 2.05, 4: 2.58, 5: 2.53, D: 2.38 },
    'KK': { SB: 1.28, BB: 1.88, 3: 1.63, 4: 1.53, 5: 1.75, D: 1.81 },
    'QQ': { SB: 1.23, BB: 0.88, 3: 1.26, 4: 0.89, 5: 1.07, D: 1.39 },
    'JJ': { SB: 0.77, BB: 0.9, 3: 0.69, 4: 0.83, 5: 0.94, D: 1.03 },
    'TT': { SB: 0.4, BB: 0.51, 3: 0.56, 4: 0.8, 5: 0.65, D: 0.87 },
    '99': { SB: 0.14, BB: 0.14, 3: 0.26, 4: 0.45, 5: 0.46, D: 0.39 },
    '88': { SB: 0.03, BB: 0.46, 3: 0.16, 4: 0.35, 5: 0.33, D: 0.13 },
    '77': { SB: 0.07, BB: -0.05, 3: 0.03, 4: 0.16, 5: 0.09, D: 0.13 },
    '66': { SB: 0.05, BB: -0.07, 3: -0.04, 4: 0.02, 5: 0.03, D: 0.12 },
    '55': { SB: -0.14, BB: -0.06, 3: -0.03, 4: 0.02, 5: -0.07, D: 0.03 },
    '44': { SB: -0.09, BB: -0.13, 3: 0.16, 4: -0.09, 5: 0.27, D: 0.03 },
    '33': { SB: -0.24, BB: -0.16, 3: -0.13, 4: -0.16, 5: -0.02, D: -0.09 },
    '22': { SB: -0.34, BB: -0.2, 3: -0.08, 4: -0.05, 5: 0.0, D: 0.06 },

    'AK': { SB: 0.42, BB: 0.41, 3: 0.52, 4: 0.58, 5: 0.38, D: 0.67 },
    'AK s': { SB: 0.7, BB: 0.55, 3: 0.77, 4: 0.85, 5: 1.02, D: 1.0 },
    'AQ': { SB: 0.23, BB: 0.18, 3: 0.38, 4: 0.41, 5: 0.35, D: 0.35 },
    'AQ s': { SB: 0.85, BB: 0.78, 3: 0.6, 4: 0.4, 5: 0.73, D: 1.04 },
    'AJ': { SB: 0.06, BB: 0.15, 3: 0.22, 4: 0.13, 5: 0.25, D: 0.37 },
    'AJ s': { SB: 0.52, BB: 0.32, 3: 0.33, 4: 0.48, 5: 0.73, D: 0.42 },
    'AT': { SB: 0.0, BB: -0.01, 3: 0.11, 4: 0.18, 5: -0.03, D: 0.22 },
    'AT s': { SB: 0.32, BB: 0.31, 3: 0.27, 4: 0.23, 5: 0.24, D: 0.38 },
    'A9': { SB: -0.13, BB: -0.08, 3: -0.04, 4: 0.11, 5: 0.1, D: -0.08 },
    'A9 s': { SB: 0.03, BB: 0.18, 3: 0.14, 4: 0.17, 5: 0.12, D: 0.42 },
    'A8': { SB: -0.2, BB: -0.17, 3: -0.02, 4: -0.04, 5: -0.03, D: -0.03 },
    'A8 s': { SB: -0.02, BB: 0.07, 3: 0.13, 4: -0.01, 5: 0.0, D: 0.06 },
    'A7': { SB: -0.29, BB: -0.08, 3: -0.08, 4: -0.03, 5: 0.06, D: -0.04 },
    'A7 s': { SB: 0.01, BB: 0.01, 3: 0.25, 4: 0.19, 5: 0.07, D: 0.27 },
    'A6': { SB: -0.17, BB: -0.24, 3: -0.07, 4: -0.05, 5: -0.07, D: -0.06 },
    'A6 s': { SB: 0.16, BB: 0.09, 3: -0.01, 4: -0.1, 5: 0.04, D: -0.03 },
    'A5': { SB: -0.29, BB: -0.31, 3: -0.09, 4: 0.03, 5: -0.09, D: -0.09 },
    'A5 s': { SB: -0.05, BB: -0.06, 3: -0.06, 4: 0.27, 5: 0.32, D: 0.21 },
    'A4': { SB: -0.22, BB: -0.08, 3: -0.17, 4: -0.11, 5: -0.01, D: -0.03 },
    'A4 s': { SB: 0.05, BB: -0.05, 3: 0.25, 4: -0.14, 5: 0.01, D: 0.33 },
    'A3': { SB: -0.17, BB: -0.23, 3: -0.17, 4: -0.15, 5: -0.03, D: -0.08 },
    'A3 s': { SB: -0.04, BB: 0.13, 3: -0.04, 4: 0.0, 5: 0.08, D: 0.08 },
    'A2': { SB: -0.31, BB: -0.27, 3: -0.22, 4: -0.07, 5: -0.08, D: -0.09 },
    'A2 s': { SB: -0.05, BB: -0.13, 3: -0.01, 4: -0.14, 5: 0.09, D: -0.1 },

    'KQ': { SB: 0.11, BB: 0.23, 3: 0.11, 4: 0.2, 5: 0.26, D: 0.25 },
    'KQ s': { SB: 0.67, BB: 0.18, 3: 0.62, 4: 0.53, 5: 0.36, D: 0.3 },
    'KJ': { SB: -0.05, BB: 0.02, 3: 0.04, 4: 0.16, 5: 0.21, D: 0.3 },
    'KJ s': { SB: 0.24, BB: 0.37, 3: 0.19, 4: 0.51, 5: 0.34, D: 0.27 },
    'KT': { SB: 0.11, BB: -0.01, 3: 0.06, 4: 0.07, 5: 0.03, D: 0.15 },
    'KT s': { SB: 0.19, BB: 0.35, 3: 0.2, 4: 0.02, 5: 0.25, D: 0.38 },
    'K9': { SB: -0.12, BB: -0.23, 3: -0.14, 4: -0.09, 5: -0.05, D: 0.04 },
    'K9 s': { SB: 0.03, BB: 0.04, 3: -0.01, 4: 0.25, 5: 0.19, D: 0.09 },
    'K8': { SB: -0.26, BB: -0.24, 3: -0.1, 4: -0.09, 5: -0.14, D: -0.08 },
    'K8 s': { SB: -0.07, BB: 0.04, 3: 0.06, 4: 0.0, 5: -0.13, D: 0.06 },
    'K7': { SB: -0.24, BB: -0.25, 3: -0.1, 4: -0.16, 5: -0.1, D: -0.12 },
    'K7 s': { SB: 0.07, BB: -0.14, 3: -0.0, 4: 0.16, 5: 0.17, D: -0.01 },
    'K6': { SB: -0.19, BB: -0.3, 3: -0.12, 4: -0.04, 5: -0.1, D: -0.09 },
    'K6 s': { SB: -0.13, BB: 0.13, 3: -0.14, 4: -0.07, 5: 0.07, D: 0.1 },
    'K5': { SB: -0.26, BB: -0.34, 3: -0.11, 4: -0.08, 5: -0.11, D: -0.05 },
    'K5 s': { SB: -0.06, BB: 0.07, 3: -0.02, 4: 0.04, 5: 0.23, D: 0.1 },
    'K4': { SB: -0.26, BB: -0.24, 3: -0.2, 4: -0.09, 5: -0.04, D: 0.06 },
    'K4 s': { SB: -0.19, BB: 0.16, 3: -0.14, 4: -0.17, 5: -0.0, D: 0.11 },
    'K3': { SB: -0.3, BB: -0.27, 3: -0.12, 4: -0.07, 5: -0.01, D: -0.08 },
    'K3 s': { SB: -0.14, BB: -0.26, 3: -0.17, 4: -0.18, 5: -0.18, D: -0.06 },
    'K2': { SB: -0.29, BB: -0.26, 3: -0.12, 4: -0.12, 5: -0.12, D: -0.03 },
    'K2 s': { SB: -0.21, BB: -0.22, 3: -0.11, 4: -0.05, 5: -0.11, D: -0.05 },

    'QJ': { SB: -0.14, BB: -0.0, 3: -0.03, 4: 0.01, 5: 0.05, D: 0.24 },
    'QJ s': { SB: 0.22, BB: 0.29, 3: 0.15, 4: 0.39, 5: 0.3, D: 0.52 },
    'QT': { SB: -0.01, BB: -0.08, 3: -0.04, 4: -0.02, 5: 0.09, D: 0.02 },
    'QT s': { SB: 0.16, BB: 0.27, 3: 0.4, 4: 0.27, 5: 0.16, D: 0.23 },
    'Q9': { SB: -0.22, BB: -0.24, 3: -0.1, 4: -0.1, 5: -0.02, D: 0.1 },
    'Q9 s': { SB: 0.04, BB: -0.15, 3: 0.29, 4: 0.07, 5: 0.05, D: 0.12 },
    'Q8': { SB: -0.24, BB: -0.26, 3: -0.09, 4: -0.02, 5: -0.04, D: -0.03 },
    'Q8 s': { SB: -0.17, BB: 0.09, 3: 0.02, 4: 0.04, 5: -0.04, D: 0.22 },
    'Q7': { SB: -0.23, BB: -0.32, 3: -0.12, 4: -0.01, 5: -0.06, D: -0.06 },
    'Q7 s': { SB: -0.2, BB: -0.1, 3: -0.13, 4: -0.18, 5: 0.19, D: 0.08 },
    'Q6': { SB: -0.26, BB: -0.29, 3: -0.08, 4: -0.12, 5: -0.04, D: 0.04 },
    'Q6 s': { SB: -0.11, BB: -0.05, 3: 0.03, 4: -0.0, 5: -0.03, D: -0.03 },
    'Q5': { SB: -0.24, BB: -0.18, 3: -0.08, 4: -0.07, 5: -0.05, D: -0.07 },
    'Q5 s': { SB: -0.11, BB: -0.42, 3: -0.05, 4: 0.03, 5: -0.05, D: -0.02 },
    'Q4': { SB: -0.28, BB: -0.33, 3: -0.06, 4: -0.07, 5: -0.09, D: -0.07 },
    'Q4 s': { SB: -0.15, BB: -0.33, 3: -0.08, 4: -0.03, 5: -0.0, D: 0.11 },
    'Q3': { SB: -0.16, BB: -0.34, 3: -0.12, 4: -0.07, 5: -0.06, D: -0.07 },
    'Q3 s': { SB: -0.19, BB: -0.24, 3: -0.13, 4: 0.01, 5: -0.08, D: -0.06 },
    'Q2': { SB: -0.29, BB: -0.35, 3: -0.06, 4: -0.05, 5: -0.07, D: -0.02 },
    'Q2 s': { SB: -0.17, BB: -0.15, 3: -0.15, 4: -0.24, 5: -0.06, D: -0.11 },

    'JT': { SB: -0.11, BB: -0.12, 3: -0.08, 4: -0.05, 5: 0.03, D: 0.13 },
    'JT s': { SB: 0.03, BB: -0.03, 3: 0.13, 4: 0.13, 5: 0.1, D: 0.17 },
    'J9': { SB: -0.09, BB: -0.17, 3: -0.12, 4: -0.03, 5: -0.07, D: -0.02 },
    'J9 s': { SB: -0.09, BB: -0.11, 3: -0.16, 4: 0.15, 5: 0.16, D: 0.06 },
    'J8': { SB: -0.24, BB: -0.24, 3: -0.04, 4: -0.03, 5: 0.01, D: -0.05 },
    'J8 s': { SB: -0.11, BB: -0.13, 3: -0.11, 4: -0.03, 5: 0.03, D: 0.18 },
    'J7': { SB: -0.33, BB: -0.3, 3: -0.09, 4: -0.06, 5: -0.06, D: -0.05 },
    'J7 s': { SB: -0.19, BB: -0.16, 3: -0.06, 4: -0.01, 5: 0.13, D: 0.09 },
    'J6': { SB: -0.28, BB: -0.36, 3: -0.07, 4: -0.07, 5: -0.06, D: -0.03 },
    'J6 s': { SB: -0.15, BB: -0.14, 3: -0.18, 4: -0.26, 5: -0.13, D: -0.05 },
    'J5': { SB: -0.26, BB: -0.36, 3: -0.1, 4: -0.11, 5: -0.07, D: -0.05 },
    'J5 s': { SB: -0.18, BB: 0.03, 3: -0.05, 4: 0.09, 5: -0.05, D: 0.0 },
    'J4': { SB: -0.28, BB: -0.4, 3: -0.09, 4: -0.06, 5: -0.08, D: -0.07 },
    'J4 s': { SB: -0.24, BB: -0.22, 3: -0.14, 4: -0.26, 5: -0.08, D: -0.04 },
    'J3': { SB: -0.27, BB: -0.3, 3: -0.09, 4: -0.05, 5: -0.03, D: -0.04 },
    'J3 s': { SB: -0.13, BB: -0.22, 3: -0.1, 4: 0.04, 5: -0.05, D: -0.12 },
    'J2': { SB: -0.29, BB: -0.35, 3: -0.11, 4: -0.0, 5: -0.04, D: -0.05 },
    'J2 s': { SB: -0.21, BB: -0.33, 3: -0.22, 4: -0.11, 5: -0.12, D: -0.22 },

    'T9': { SB: -0.03, BB: -0.16, 3: -0.05, 4: -0.07, 5: -0.05, D: -0.01 },
    'T9 s': { SB: -0.12, BB: 0.08, 3: 0.13, 4: 0.07, 5: 0.05, D: 0.46 },
    'T8': { SB: -0.24, BB: -0.26, 3: -0.02, 4: -0.04, 5: -0.04, D: 0.01 },
    'T8 s': { SB: -0.14, BB: -0.05, 3: 0.11, 4: -0.09, 5: 0.1, D: 0.18 },
    'T7': { SB: -0.21, BB: -0.27, 3: -0.1, 4: -0.07, 5: -0.03, D: -0.03 },
    'T7 s': { SB: -0.1, BB: -0.14, 3: -0.07, 4: 0.01, 5: 0.08, D: 0.09 },
    'T6': { SB: -0.29, BB: -0.35, 3: -0.1, 4: -0.04, 5: -0.02, D: -0.03 },
    'T6 s': { SB: -0.12, BB: -0.34, 3: -0.1, 4: -0.18, 5: -0.06, D: 0.22 },
    'T5': { SB: -0.28, BB: -0.38, 3: -0.1, 4: -0.03, 5: -0.03, D: -0.02 },
    'T5 s': { SB: 0.09, BB: 0.03, 3: -0.05, 4: 0.09, 5: -0.05, D: 0.09 },
    'T4': { SB: -0.24, BB: -0.33, 3: -0.1, 4: -0.02, 5: -0.02, D: -0.04 },
    'T4 s': { SB: -0.25, BB: -0.24, 3: -0.06, 4: -0.08, 5: -0.11, D: -0.07 },
    'T3': { SB: -0.3, BB: -0.39, 3: -0.09, 4: -0.04, 5: -0.02, D: -0.02 },
    'T3 s': { SB: -0.24, BB: -0.37, 3: -0.19, 4: -0.22, 5: -0.07, D: -0.1 },
    'T2': { SB: -0.28, BB: -0.33, 3: -0.09, 4: -0.04, 5: -0.03, D: -0.06 },
    'T2 s': { SB: 0.04, BB: -0.29, 3: -0.13, 4: -0.19, 5: -0.04, D: -0.08 },

    '98': { SB: -0.19, BB: -0.2, 3: -0.13, 4: -0.03, 5: -0.07, D: 0.1 },
    '98 s': { SB: -0.08, BB: -0.07, 3: 0.02, 4: 0.1, 5: -0.01, D: 0.04 },
    '97': { SB: -0.24, BB: -0.26, 3: -0.05, 4: -0.06, 5: -0.04, D: -0.02 },
    '97 s': { SB: -0.2, BB: -0.09, 3: -0.11, 4: 0.07, 5: 0.09, D: 0.0 },

    '96': { SB: -0.29, BB: -0.35, 3: -0.1, 4: -0.04, 5: -0.02, D: -0.03 },
    '96 s': { SB: -0.12, BB: -0.34, 3: -0.1, 4: -0.18, 5: -0.06, D: 0.22 },
    '95': { SB: -0.28, BB: -0.38, 3: -0.1, 4: -0.03, 5: -0.03, D: -0.02 },
    '95 s': { SB: 0.09, BB: 0.03, 3: -0.05, 4: 0.09, 5: -0.05, D: 0.09 },
    '94': { SB: -0.24, BB: -0.33, 3: -0.1, 4: -0.02, 5: -0.02, D: -0.04 },
    '94 s': { SB: -0.25, BB: -0.24, 3: -0.06, 4: -0.08, 5: -0.11, D: -0.07 },
    '93': { SB: -0.3, BB: -0.39, 3: -0.09, 4: -0.04, 5: -0.02, D: -0.02 },
    '93 s': { SB: -0.24, BB: -0.37, 3: -0.19, 4: -0.22, 5: -0.07, D: -0.1 },
    '92': { SB: -0.28, BB: -0.33, 3: -0.09, 4: -0.04, 5: -0.03, D: -0.06 },
    '92 s': { SB: 0.04, BB: -0.29, 3: -0.13, 4: -0.19, 5: -0.04, D: -0.08 },
};

const EvCalculator = () => {
    const [hand, setHand] = useState('');
    const [numPlayers, setNumPlayers] = useState(6);
    const [isSuited, setIsSuited] = useState(false);
    const [result, setResult] = useState<{ [key: string]: string } | string>({});

    // Function to handle button click on the on-screen keyboard
    const handleKeyClick = (key: string) => {
        if (key === 's') {
            setIsSuited((prev) => !prev); // Toggle suited
        } else {
            setHand((prev) => prev + key); // Append character to hand
        }
    };

    const calculateEV = () => {
        const normalizedHand = isSuited ? `${hand} s` : hand;
        if (!evValues[normalizedHand]) {
            setResult('Invalid card input.');
            return;
        }
        const baseEV = evValues[normalizedHand];
        const multiplier = numPlayers === 5 ? 1.1 : numPlayers === 4 ? 1.25 : 1;
        const adjustedEV: { [key: string]: string } = {};

        for (const position in baseEV) {
            adjustedEV[position] = (baseEV[position] * multiplier).toFixed(2);
        }
        setResult(adjustedEV);
    };
    // Reset function
    const handleReset = () => {
        setHand('');
        setNumPlayers(6);
        setIsSuited(false);
        setResult({});
    };

    return (
        <div className="p-4 bg-gray-100 min-h-screen flex flex-col items-center">
            <h1 className="text-2xl font-bold mb-4">Poker EV Calculator</h1>
            <div className="mb-4">
                <p>
                    Selected Hand:{' '}
                    <strong>
                        {hand}
                        {isSuited ? 's' : ''}
                    </strong>
                </p>
                <p>
                    Number of Players:
                    <input
                        type="number"
                        value={numPlayers}
                        onChange={(e) => setNumPlayers(Math.max(2, Math.min(6, parseInt(e.target.value) || 6)))}
                        min="2"
                        max="6"
                        className="ml-2 p-1 border rounded"
                    />
                </p>
            </div>

            {/* On-Screen Keyboard */}
            <div className="grid grid-cols-5 gap-2 max-w-sm mb-4">
                {[...'AKQJT', 's', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].map((key) => (
                    <button key={key} onClick={() => handleKeyClick(key)} className={`p-2 rounded border ${key === 's' && isSuited ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}>
                        {key}
                    </button>
                ))}
            </div>

            <button onClick={calculateEV} className="mb-4 p-2 bg-green-500 text-white rounded hover:bg-green-600">
                Calculate EV
            </button>
            {/* Reset Button */}
            <button onClick={handleReset} className="mb-4 p-2 bg-red-500 text-white rounded hover:bg-red-600">
                Reset
            </button>

            {/* Display Results */}
            <div className="mt-4 w-full max-w-md">
                <h2 className="text-xl font-semibold mb-2">Adjusted EV Values:</h2>
                <div className="grid grid-cols-3 gap-2">
                    {typeof result === 'object' &&
                        Object.entries(result).map(([position, ev]) => (
                            <div key={position} className={`p-4 rounded text-center ${parseFloat(ev) < 0.1 ? 'bg-red-500 text-white' : 'bg-gray-300'}`}>
                                <strong>{position}</strong>: {ev}
                            </div>
                        ))}
                </div>
                {typeof result === 'string' && <p className="text-red-500">{result}</p>}
            </div>
        </div>
    );
};

export default EvCalculator;
